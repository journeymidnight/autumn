# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pspb_pb2 as pspb__pb2


class PartitionKVStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Batch = channel.unary_unary(
                '/pspb.PartitionKV/Batch',
                request_serializer=pspb__pb2.BatchRequest.SerializeToString,
                response_deserializer=pspb__pb2.BatchResponse.FromString,
                )
        self.Put = channel.unary_unary(
                '/pspb.PartitionKV/Put',
                request_serializer=pspb__pb2.PutRequest.SerializeToString,
                response_deserializer=pspb__pb2.PutResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/pspb.PartitionKV/Get',
                request_serializer=pspb__pb2.GetRequest.SerializeToString,
                response_deserializer=pspb__pb2.GetResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/pspb.PartitionKV/Delete',
                request_serializer=pspb__pb2.DeleteRequest.SerializeToString,
                response_deserializer=pspb__pb2.DeleteResponse.FromString,
                )
        self.Range = channel.unary_unary(
                '/pspb.PartitionKV/Range',
                request_serializer=pspb__pb2.RangeRequest.SerializeToString,
                response_deserializer=pspb__pb2.RangeResponse.FromString,
                )
        self.SplitPart = channel.unary_unary(
                '/pspb.PartitionKV/SplitPart',
                request_serializer=pspb__pb2.SplitPartRequest.SerializeToString,
                response_deserializer=pspb__pb2.SplitPartResponse.FromString,
                )


class PartitionKVServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Batch(self, request, context):
        """
        option (google.api.http) = {
        post: "/v3/kv/txn"
        body: "*"
        };
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Range(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SplitPart(self, request, context):
        """ps management API
        system performace
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PartitionKVServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Batch': grpc.unary_unary_rpc_method_handler(
                    servicer.Batch,
                    request_deserializer=pspb__pb2.BatchRequest.FromString,
                    response_serializer=pspb__pb2.BatchResponse.SerializeToString,
            ),
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=pspb__pb2.PutRequest.FromString,
                    response_serializer=pspb__pb2.PutResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=pspb__pb2.GetRequest.FromString,
                    response_serializer=pspb__pb2.GetResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=pspb__pb2.DeleteRequest.FromString,
                    response_serializer=pspb__pb2.DeleteResponse.SerializeToString,
            ),
            'Range': grpc.unary_unary_rpc_method_handler(
                    servicer.Range,
                    request_deserializer=pspb__pb2.RangeRequest.FromString,
                    response_serializer=pspb__pb2.RangeResponse.SerializeToString,
            ),
            'SplitPart': grpc.unary_unary_rpc_method_handler(
                    servicer.SplitPart,
                    request_deserializer=pspb__pb2.SplitPartRequest.FromString,
                    response_serializer=pspb__pb2.SplitPartResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pspb.PartitionKV', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PartitionKV(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Batch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pspb.PartitionKV/Batch',
            pspb__pb2.BatchRequest.SerializeToString,
            pspb__pb2.BatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pspb.PartitionKV/Put',
            pspb__pb2.PutRequest.SerializeToString,
            pspb__pb2.PutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pspb.PartitionKV/Get',
            pspb__pb2.GetRequest.SerializeToString,
            pspb__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pspb.PartitionKV/Delete',
            pspb__pb2.DeleteRequest.SerializeToString,
            pspb__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Range(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pspb.PartitionKV/Range',
            pspb__pb2.RangeRequest.SerializeToString,
            pspb__pb2.RangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SplitPart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pspb.PartitionKV/SplitPart',
            pspb__pb2.SplitPartRequest.SerializeToString,
            pspb__pb2.SplitPartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
